<!-- Local rules -->

<!-- Modify it at your will. -->
<!-- Copyright (C) 2015, Wazuh Inc. -->

<!-- Example -->
<group name="local,syslog,sshd,">

  <!--
  Dec 10 01:02:02 host sshd[1234]: Failed none for root from 1.1.1.1 port 1066 ssh2
  -->
  <rule id="100001" level="5">
    <if_sid>5716</if_sid>
    <srcip>1.1.1.1</srcip>
    <description>sshd: authentication failed from IP 1.1.1.1.</description>
    <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>
  </rule>

  <rule id="100002" level="7">
    <if_group>syscheck</if_group>
    <match>.php</match>
    <description>Possible webshell file detected</description>
  </rule>

  <rule id="110000" level="0" frequency="2">
    <if_group>syscheck</if_group>
    <match>/var/ossec/etc/shared/conf</match>
    <description>New configuration file updated.</description>
  </rule>
  <rule id="110001" level="1">
    <if_sid>110000</if_sid>
    <match>pamusb</match>
    <description>New pamusb configuration updated.</description>
  </rule>
  <rule id="110002" level="0">
    <if_sid>110000</if_sid>
    <match>fapolicyd</match>
    <description>New fapolicyd configuration updated.</description>
  </rule>
  <rule id="110003" level="1">
    <if_sid>110002</if_sid>
    <match>.rules</match>
    <description>New fapolicyd rules updated.</description>
  </rule>
  <rule id="110004" level="1">
    <if_sid>110002</if_sid>
    <match>.trust</match>
    <description>New fapolicyd trust updated.</description>
  </rule>

  <rule id="110100" level="0">
    <decoded_as>fapolicyd</decoded_as>
    <description>fapolicyd permission logs.</description>
  </rule>
  <rule id="110101" level="6">
    <if_sid>110100</if_sid>
    <match>deny</match>
    <description>auid: $(auid) pid: $(pid) trying to $(perm) $(path) that is not allowed.</description>
  </rule> 

  <rule id="100004" level="7">
    <decoded_as>pamusb</decoded_as>
    <match>denied</match>
    <description>USB authentication for $(log_user) denied.</description>
  </rule>
  <rule id="100005" level="3">
    <decoded_as>pamusb</decoded_as>
    <match>granted</match>
    <description>USB authentication for $(log_user) granted.</description>
  </rule>

  <rule id="100010" level="1">
    <decoded_as>active_user</decoded_as>
    <description>User $(active_user) is active on $(active_ip).</description>
  </rule>
<rule id="100050" level="0">
    <if_sid>530</if_sid>
    <match>^ossec: output: 'ps -eo user,pid,cmd'</match>
    <description>List of running process.</description>
    <group>process_monitor,</group>
  </rule>
  <rule id="100051" level="15">
    <if_sid>100050</if_sid>
    <match>bash -i|dash -i|sh -i$|perl -e|perl -MIO -e|php -r|ruby -rsocket|xterm -display|Xnest |xhost |nc -e /bin/|lua -e require|python -c import socket|python -c import subprocess|python -c import os|python -c exec</match>
    <description>Reverse shell listening for incoming connections.</description>
    <group>process_monitor,attacks</group>
  </rule>

  <rule id="100052" level="0">
    <if_sid>530</if_sid>
    <match>^ossec: output: 'netstat -anptl'</match>
    <description>List of listening tcp ports.</description>
    <group>process_monitor,</group>
  </rule>
  <rule id="100053" level="0">
    <if_sid>100052</if_sid>
    <match>/bash|/dash|/sh|/nc</match>
    <description>Find shell processes that have open sockets.</description>
    <group>process_monitor,attacks</group>
  </rule>

</group>
